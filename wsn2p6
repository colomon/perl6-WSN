# SYNTAX     = { PRODUCTION } .
# PRODUCTION = IDENTIFIER "=" EXPRESSION "." .
# EXPRESSION = TERM { "|" TERM } .
# TERM       = FACTOR { FACTOR } .
# FACTOR     = IDENTIFIER
#            | LITERAL
#            | "[" EXPRESSION "]"
#            | "(" EXPRESSION ")"
#            | "{" EXPRESSION "}" .
# IDENTIFIER = letter { letter } .
# LITERAL    = """" character { character } """" .

grammar WSN {
    rule TOP { ^ <production>* $ }
    rule production { <identifier> "=" <expression> "." }
    rule expression { <term> [ "|" <term> ]* }
    rule term { <factor> <factor>* }
    rule factor { 
                    <identifier>
                  | <literal>
                  | [ '[' <expression> ']' ]
                  | [ '(' <expression> ')' ]
                  | [ '{' <expression> '}' ]
                 }
    regex identifier { \w+ }
    regex literal { '"' \S+ '"'}
}

my $file-data = slurp("wsn.wsn");
my $match = WSN.parse($file-data);
say $match;